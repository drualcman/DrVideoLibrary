@page "/"

<PageTitle>@Localizer.GetString(nameof(ResourceIndex.PageTitle)) #@ViewModel.TotalMovies</PageTitle>

@if (ViewModel.IsReady)
{
    <div class="columns">
        <div class="column is-one-fifth">
            <div class="search">
                <SearchComponent OnSearch=ViewModel.SeachMovie OnReset=ViewModel.GetList />
            </div>
        </div>
        <div class="column">
            <div class="title-wrapper">
                <div class="columns">
                    <div class="column has-text-centered">
                        <h1 class="title">@Localizer.GetString(nameof(ResourceIndex.PageTitle))</h1>
                    </div>
                    <div class="column has-text-right"><h2 class="subtitle">#@ViewModel.TotalMovies</h2></div>
                </div>
            </div>
        </div>
    </div>
    <div class="pagination-container">
        <Paginator Handler=ViewModel.Paginator OnPageChange=ToPage />
    </div>
    <div class="columns">
        <div class="column is-1">
            <div class="tags">
                <div class="tags has-addons" @onclick="() => ViewModel.FilterbyCategory(string.Empty)">
                    <span class="tag is-info">X</span>
                    <span class="tag is-dark">
                        <span class="icon">
                            <i class="fa-solid fa-eraser"></i>
                        </span>
                    </span>
                </div>
                @foreach (Category category in ViewModel.Categories)
                {
                    <div class="tags has-addons" @onclick="() => ViewModel.FilterbyCategory(category.Name)">
                        <span class="tag is-info">@category.Count</span>
                        <span class="tag @(ViewModel.IsSelectedCategory(category.Name) ? "is-success":"is-dark")">@category.Name</span>
                    </div>
                }
            </div>
        </div>
        <div class="column">
            <div class="wrapper">
                @foreach (ListCard movie in ViewModel.Items)
                {
                    <ListCardComponent Movie=movie OnPlay=StartPlayMovie />
                }
            </div>
        </div>
    </div>
}
else
{
    <WaitingLoader />
}


